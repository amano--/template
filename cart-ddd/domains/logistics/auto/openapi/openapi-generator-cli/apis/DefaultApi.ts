/* tslint:disable */
/* eslint-disable */
/**
 * s
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    DeliveryOrder,
    DeliveryOrderFromJSON,
    DeliveryOrderToJSON,
} from '../models';

export interface GetOrdersOrderIdRequest {
    orderId: string;
}

export interface PutOrdersOrderIdRequest {
    orderId: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Your GET endpoint
     */
    async getOrdersOrderIdRaw(requestParameters: GetOrdersOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<DeliveryOrder>>> {
        if (requestParameters.orderId === null || requestParameters.orderId === undefined) {
            throw new runtime.RequiredError('orderId','Required parameter requestParameters.orderId was null or undefined when calling getOrdersOrderId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/orders/{orderId}`.replace(`{${"orderId"}}`, encodeURIComponent(String(requestParameters.orderId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DeliveryOrderFromJSON));
    }

    /**
     * Your GET endpoint
     */
    async getOrdersOrderId(requestParameters: GetOrdersOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<DeliveryOrder>> {
        const response = await this.getOrdersOrderIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 
     */
    async postOrderRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<DeliveryOrder>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/order`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryOrderFromJSON(jsonValue));
    }

    /**
     * 
     */
    async postOrder(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<DeliveryOrder> {
        const response = await this.postOrderRaw(initOverrides);
        return await response.value();
    }

    /**
     * 
     */
    async putOrdersOrderIdRaw(requestParameters: PutOrdersOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.orderId === null || requestParameters.orderId === undefined) {
            throw new runtime.RequiredError('orderId','Required parameter requestParameters.orderId was null or undefined when calling putOrdersOrderId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/orders/{orderId}`.replace(`{${"orderId"}}`, encodeURIComponent(String(requestParameters.orderId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * 
     */
    async putOrdersOrderId(requestParameters: PutOrdersOrderIdRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<void> {
        await this.putOrdersOrderIdRaw(requestParameters, initOverrides);
    }

}
